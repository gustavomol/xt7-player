# Gambas Form File 3.0

{ Form Form
  MoveScaled(0,0,91.4286,74)
  Tag = "reparents"
  Text = ("Chains Editor")
  Icon = Picture["pipe.png"]
  Persistent = True
  Arrangement = Arrange.Vertical
  Margin = True
  Padding = 4
  { MenuProfile Menu
    Text = ("Profile")
    { MenuLoadDefault Menu
      Text = ("Reload current profile")
      Picture = Picture["icon:/16/open"]
    }
    { MenuSaveDefault Menu
      Text = ("Save to current profile")
      Picture = Picture["icon:/16/save"]
    }
  }
  { Timer1 #Timer
    Enabled = True
    Delay = 500
  }
  { HBox1 HBox
    MoveScaled(0,2,90,60)
    Expand = True
    Spacing = True
    Margin = True
    Padding = 4
    { SidePanel1 SidePanel
      MoveScaled(1,2,24,55)
      Arrangement = Arrange.Fill
      Orientation = Align.Left
      { VBox3 VBox
        MoveScaled(2,2,22,51)
        ToolTip = ("Available video filters.\nDrag them into the video chain to use them.\nClick on a filter to bring up his configuration window.")
        Expand = True
        { VideoFiltersLabel Label
          MoveScaled(1,0,18,3)
          AutoResize = True
          Text = ("Video Filters Toolbox")
          Alignment = Align.Left
        }
        { VideoFiltersBox ScrollView
          MoveScaled(1,2,20,44)
          Background = Color.TextBackground
          Expand = True
          Arrangement = Arrange.Vertical
          Spacing = True
          Margin = True
          Padding = 8
          { Yadif Button VideoFilterObj
            Name = "Yadif"
            MoveScaled(0,1,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       yadif=[mode[:field_dominance]]\n              Yet another deinterlacing filter\n                 <mode>\n                      0: Output 1 frame for each frame.\n                      1: Output 1 frame for each field.\n                      2: Like 0 but skips spatial interlacing check.\n                      3: Like 1 but skips spatial interlacing check.\n                 <field_dominance> (DEPRECATED)\n                      Operates like tfields.\n                      NOTE: This option will possibly be removed in  a  future\n                      version.  Use -field-dominance instead.\n"
            Text = ("Yadif")
            Picture = Picture["icon:/16/next"]
          }
          { Unsharp Button VideoFilterObj
            Name = "Unsharp"
            MoveScaled(0,5,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       unsharp[=l|cWxH:amount[:l|cWxH:amount]]\n              unsharp mask / gaussian blur\n\n                 l:\n                      Apply effect on luma component.\n\n                 c:\n                      Apply effect on chroma components.\n\n                 <width>x<height>:\n                      width and height of the matrix, odd sized in both directions (min =  3x3,\n                      max = 13x11 or 11x13, usually something between 3x3 and 7x7)\n\n                 amount:\n                      Relative  amount  of  sharpness/blur  to  add  to the image (a sane range\n                      should be -1.5-1.5).\n                         <0: blur\n                         >0: sharpen\n"
            Text = ("Unsharp")
            Picture = Picture["icon:/16/next"]
          }
          { ppHaDeblock Button VideoFilterObj
            Name = "ppHaDeblock"
            MoveScaled(0,9,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                  ha/hadeblock[:difference[:flatness]]\n                      Accurate horizontal deblocking filter\n                         <difference>:  Difference  factor where higher values\n                         mean more deblocking (default: 32).\n                         <flatness>: Flatness  threshold  where  lower  values\n                         mean more deblocking (default: 39)."
            Text = ("ppHADeblock")
            Picture = Picture["icon:/16/next"]
          }
          { ppVDeblock Button VideoFilterObj
            Name = "ppVDeblock"
            MoveScaled(-1,14,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                  vb/vdeblock[:difference[:flatness]]\n                      vertical deblocking filter\n                         <difference>:  Difference  factor where higher values\n                         mean more deblocking (default: 32).\n                         <flatness>: Flatness  threshold  where  lower  values\n                         mean more deblocking (default: 39)."
            Text = ("ppVDeblock")
            Picture = Picture["icon:/16/next"]
          }
          { ppHDeblock Button VideoFilterObj
            Name = "ppHDeblock"
            MoveScaled(-1,18,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                  hb/hdeblock[:difference[:flatness]]\n                      horizontal deblocking filter\n                         <difference>:  Difference  factor where higher values\n                         mean more deblocking (default: 32).\n                         <flatness>: Flatness  threshold  where  lower  values\n                         mean more deblocking (default: 39)."
            Text = ("ppHDeblock")
            Picture = Picture["icon:/16/next"]
          }
          { ppVaDeblock Button VideoFilterObj
            Name = "ppVaDeblock"
            MoveScaled(-1,22,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                  va/vadeblock[:difference[:flatness]]\n                      accurate vertical deblocking filter\n                         <difference>:  Difference  factor where higher values\n                         mean more deblocking (default: 32).\n                         <flatness>: Flatness  threshold  where  lower  values\n                         mean more deblocking (default: 39)."
            Text = ("ppVADeblock")
            Picture = Picture["icon:/16/next"]
          }
          { ppdering Button VideoFilterObj
            Name = "ppdering"
            MoveScaled(0,27,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                 dr/dering\n                      deringing filter"
            Text = ("ppDering")
            Picture = Picture["icon:/16/next"]
          }
          { ppAutoLevels Button VideoFilterObj
            Name = "ppAutoLevels"
            MoveScaled(0,32,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n                 al/autolevels[:f/fullyrange]\n                      automatic brightness / contrast correction\n                         f/fullyrange: Stretch luminance to (0-255).\n"
            Text = ("ppAutoLevels")
            Picture = Picture["icon:/16/next"]
          }
          { ppdeinterlace Button VideoFilterObj
            Name = "ppdeinterlace"
            MoveScaled(0,36,16.4286,4)
            Background = &HDDDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n** but after spp,uspp and fspp **\n\n\n                 lb/linblenddeint\n                      Linear  blend deinterlacing filter that deinterlaces the\n                      given block by filtering all lines with a (1 2  1)  fil-\n                      ter.\n\n                 li/linipoldeint\n                      Linear  interpolating deinterlacing filter that deinter-\n                      laces the given block by  linearly  interpolating  every\n                      second line.\n\n                 ci/cubicipoldeint\n                      Cubic  interpolating  deinterlacing  filter deinterlaces\n                      the given block by cubically interpolating every  second\n                      line.\n\n                 md/mediandeint\n                      Median  deinterlacing filter that deinterlaces the given\n                      block by applying a median filter to every second  line.\n\n                 fd/ffmpegdeint\n                      FFmpeg  deinterlacing filter that deinterlaces the given\n                      block by filtering every second line with a (-1  4  2  4\n                      -1) filter.\n\n                 l5/lowpass5\n                      Vertically applied FIR lowpass deinterlacing filter that\n                      deinterlaces the given block by filtering all lines with\n                      a (-1 2 6 2 -1) filter."
            Text = ("ppDeinterlace")
            Picture = Picture["icon:/16/next"]
          }
          { fspp Button VideoFilterObj
            Name = "fspp"
            MoveScaled(-1,42,16.4286,4)
            Background = &HFEDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n\n       fspp[=quality[:qp[:strength[:bframes]]]]\n              faster version of the simple postprocessing filter\n\n                 <quality>\n                      4-5 (equivalent to spp; default: 4)\n\n                 <qp>\n                      Force  quantization  parameter  (default: 0, use QP from\n                      video).\n\n                 <-15-32>\n                      Filter strength, lower values mean more details but also\n                      more  artifacts,  while  higher  values  make  the image\n                      smoother but also blurrier (default: 0 - PSNR  optimal).\n\n                 <bframes>\n                      0: do not use QP from B-frames (default)\n                      1: use QP from B-frames too (may cause flicker)"
            Text = ("FSpp Denoiser")
            Picture = Picture["icon:/16/next"]
          }
          { uspp Button VideoFilterObj
            Name = "uspp"
            MoveScaled(0,47,16.4286,4)
            Background = &HFEDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n\n       uspp[=quality[:qp]]\n              Ultra  simple  &  slow postprocessing filter that compresses and\n              decompresses the image at several (or - in the case  of  quality\n              level  8  -  all) shifts and averages the results.  The way this\n              differs from the behavior of spp is that uspp actually encodes &\n              decodes  each case with libavcodec Snow, whereas spp uses a sim-\n              plified intra only 8x8 DCT similar to MJPEG.\n\n                 <quality>\n                      0-8 (default: 3)\n\n                 <qp>\n                      Force quantization parameter (default: 0,  use  QP  from\n                      video).\n"
            Tracking = True
            Text = ("USpp Denoiser")
            Picture = Picture["icon:/16/next"]
          }
          { spp Button VideoFilterObj
            Name = "spp"
            MoveScaled(1,52,16.4286,4)
            Background = &HFEDDFF&
            Tag = "** For this filter to work properly, it will be auto placed at the beginning of the chain **\n\n       spp[=quality[:qp[:mode]]]\n              Simple postprocessing filter that  compresses  and  decompresses\n              the image at several (or - in the case of quality level 6 - all)\n              shifts and averages the results.\n\n                 <quality>\n                      0-6 (default: 3)\n\n                 <qp>\n                      Force quantization parameter (default: 0,  use  QP  from\n                      video).\n\n                 <mode>\n                      0: hard thresholding (default)\n                      1: soft thresholding (better deringing, but blurrier)\n                      4: like 0, but also use B-frames' QP (may cause flicker)\n                      5: like 1, but also use B-frames' QP (may cause flicker\n"
            Text = ("Spp Denoiser")
            Picture = Picture["icon:/16/next"]
          }
          { Denoise3D Button VideoFilterObj
            Name = "Denoise3D"
            MoveScaled(1,57,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       denoise3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]\n              This  filter  aims to reduce image noise producing smooth images\n              and making still images really still (This should  enhance  com-\n              pressibility.).\n                 <luma_spatial>\n                      spatial luma strength (default: 4)\n                 <chroma_spatial>\n                      spatial chroma strength (default: 3)\n                 <luma_tmp>\n                      luma temporal strength (default: 6)\n                 <chroma_tmp>\n                      chroma  temporal strength (default: luma_tmp*chroma_spa-\n                      tial/luma_spatial)\n"
            Text = ("Denoise3D")
            Picture = Picture["icon:/16/next"]
          }
          { HQdn3d Button VideoFilterObj
            Name = "HQdn3d"
            MoveScaled(1,62,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       hqdn3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]\n              High precision/quality version of the denoise3d filter.  Parame-\n              ters and usage are the same.\n\n------------------------------------------------------------------------------\n\n       denoise3d[=luma_spatial:chroma_spatial:luma_tmp:chroma_tmp]\n              This  filter  aims to reduce image noise producing smooth images\n              and making still images really still (This should  enhance  com-\n              pressibility.).\n                 <luma_spatial>\n                      spatial luma strength (default: 4)\n                 <chroma_spatial>\n                      spatial chroma strength (default: 3)\n                 <luma_tmp>\n                      luma temporal strength (default: 6)\n                 <chroma_tmp>\n                      chroma  temporal strength (default: luma_tmp*chroma_spa-\n                      tial/luma_spatial)\n"
            Text = ("HQDenoise3D")
            Picture = Picture["icon:/16/next"]
          }
          { GradFun Button VideoFilterObj
            Name = "GradFun"
            MoveScaled(1,66,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       gradfun[=strength[:radius]]\n              Fix the banding artifacts that are sometimes introduced into nearly flat re-\n              gions by truncation to 8bit colordepth.   Interpolates  the  gradients  that\n              should go where the bands are, and dithers them.\n\n              This  filter  is  designed  for playback only.  Do not use it prior to lossy\n              compression, because compression tends to lose the dither and bring back the\n              bands.\n\n                 <strength>\n                      Maximum  amount by which the filter will change any one pixel.  Also\n                      the threshold for detecting nearly flat regions (default: 1.2).\n\n                 <radius>\n                      Neighborhood to fit  the  gradient  to.   Larger  radius  makes  for\n                      smoother gradients, but also prevents the filter from modifying pix-\n                      els near detailed regions (default: 16).\n"
            Text = ("GradFun")
            Picture = Picture["icon:/16/next"]
          }
          { Scale Button VideoFilterObj
            Name = "Scale"
            MoveScaled(1,71,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       scale[=w:h[:ilaced[:chr_drop[:par[:par2[:presize[:noup[:arnd]]]]]]]]\n              Scales  the image with the software scaler (slow) and performs a\n              YUV<->RGB colorspace conversion (also see -sws).\n\n                 <w>,<h>\n                      scaled width/height (default: original width/height)\n                      NOTE: If -zoom is used, and underlying filters  (includ-\n                      ing  libvo)  are  incapable  of  scaling, it defaults to\n                      d_width/d_height!\n                          0:   scaled d_width/d_height\n                         -1:   original width/height\n                         -2:   Calculate w/h using the other dimension and the\n                         prescaled aspect ratio.\n                         -3:   Calculate w/h using the other dimension and the\n                         original aspect ratio.\n                         -(n+8): Like -n above, but rounding the dimension  to\n                         the closest multiple of 16.\n\n                 <ilaced>\n                      Toggle interlaced scaling.\n                         0: off (default)\n                         1: on\n\n                 <chr_drop>\n                      chroma skipping\n                         0: Use all available input lines for chroma.\n                         1: Use only every 2. input line for chroma.\n                         2: Use only every 4. input line for chroma.\n                         3: Use only every 8. input line for chroma.\n\n                 <par>[:<par2>] (also see -sws)\n                      Set  some  scaling  parameters  depending on the type of\n                      scaler selected with -sws.\n                         -sws 2 (bicubic):  B (blurring) and C (ringing)\n                         0.00:0.60 default\n                         0.00:0.75 VirtualDub's \"precise bicubic\"\n                         0.00:0.50 Catmull-Rom spline\n                         0.33:0.33 Mitchell-Netravali spline\n                         1.00:0.00 cubic B-spline\n                         -sws 7 (gaussian): sharpness (0 (soft) - 100 (sharp))\n                         -sws 9 (lanczos):  filter length (1-10)\n                 <presize>\n                      Scale to preset sizes.\n                         qntsc:   352x240 (NTSC quarter screen)\n                         qpal:    352x288 (PAL quarter screen)\n                         ntsc:    720x480 (standard NTSC)\n                         pal:     720x576 (standard PAL)\n                         sntsc:   640x480 (square pixel NTSC)\n                         spal:    768x576 (square pixel PAL)\n\n                 <noup>\n                      Disallow upscaling past the original dimensions.\n                         0: Allow upscaling (default).\n                         1:  Disallow  upscaling  if one dimension exceeds its\n                         original value.\n                         2: Disallow upscaling if both dimensions exceed their\n                         original values.\n\n                 <arnd>\n                      Accurate  rounding for the vertical scaler, which may be\n                      faster or slower than the default rounding.\n                         0: Disable accurate rounding (default).\n                         1: Enable accurate rounding.\n\n"
            Text = ("Scale")
            Picture = Picture["icon:/16/next"]
          }
          { MyExpand Button VideoFilterObj
            Name = "MyExpand"
            MoveScaled(1,75,16.4286,4)
            Background = &HFFFF5F&
            Tag = "      expand[=w:h:x:y:o:a:r]\n              Expands (not scales) movie resolution to the given  value  and\n              places the unscaled original at coordinates x, y.  Can be used\n              for placing subtitles/OSD in the resulting black bands.\n\n                 <w>,<h>\n                      Expanded     width,height      (default:      original\n                      width,height).  Negative values for w and h are treat-\n                      ed as offsets to the original size.\n\n                      EXAMPLE:\n                           expand=0:-50:0:0\n                                  Adds a 50 pixel border to  the  bottom  of\n                                  the picture.\n\n                 <x>,<y>\n                      position  of original image on the expanded image (de-\n                      fault: center)\n\n                 <o>\n                      OSD/subtitle rendering\n                         0: disable (default)\n                         1: enable\n\n                 <a>\n                      Expands to fit an aspect instead of a resolution  (de-\n                      fault: 0).\n\n                      EXAMPLE:\n                           expand=800:::::4/3\n                                  Expands  to  800x600, unless the source is\n                                  higher resolution, in which  case  it  ex-\n                                  pands to fill a 4/3 aspect.\n\n                 <r>\n                      Rounds  up  to make both width and height divisible by\n                      <r> (default: 1)."
            Text = ("Expand")
            Picture = Picture["icon:/16/next"]
          }
          { DeLogo Button VideoFilterObj
            Name = "DeLogo"
            MoveScaled(1,79,16.4286,4)
            Background = &HFFFF5F&
            Tag = "       delogo[=x:y:w:h:t]\n              Suppresses  a  TV  station logo by a simple interpolation of the\n              surrounding pixels.  Just set a rectangle covering the logo  and\n              watch it disappear (and sometimes something even uglier appear -\n              your mileage may vary).\n                 <x>,<y>\n                      top left corner of the logo\n                 <w>,<h>\n                      width and height of the cleared rectangle\n                 <t>  Thickness of the fuzzy edge of the rectangle (added to w\n                      and  h).   When set to -1, a green rectangle is drawn on\n                      the screen to simplify finding the right x,y,w,h parame-\n                      ters.\n\n"
            Text = ("DeLogo")
            Picture = Picture["icon:/16/next"]
          }
          { Eq2 Button VideoFilterObj
            Name = "Eq2"
            MoveScaled(1,84,16.4286,4)
            Background = &H9FFF9F&
            Tag = "       eq2[=gamma:contrast:brightness:saturation:rg:gg:bg:weight]\n              Alternative software equalizer that  uses  lookup  tables  (very\n              slow),  allowing  gamma correction in addition to simple bright-\n              ness and contrast adjustment.  Note that it uses  the  same  MMX\n              optimized  code  as -vf eq if all gamma values are 1.0.  The pa-\n              rameters are given as floating point values.\n                 <0.1-10>\n                      initial gamma value (default: 1.0)\n                 <-2-2>\n                      initial contrast, where negative values result in a neg-\n                      ative image (default: 1.0)\n                 <-1-1>\n                      initial brightness (default: 0.0)\n                 <0-3>\n                      initial saturation (default: 1.0)\n                 <0.1-10>\n                      gamma value for the red component (default: 1.0)\n                 <0.1-10>\n                      gamma value for the green component (default: 1.0)\n                 <0.1-10>\n                      gamma value for the blue component (default: 1.0)\n                 <0-1>\n                      The weight parameter can be used to reduce the effect of\n                      a high gamma value on bright image areas, e.g. keep them\n                      from getting overamplified and just plain white.  A val-\n                      ue of 0.0 turns the gamma correction all  the  way  down\n                      while 1.0 leaves it at its full strength (default: 1.0).\n"
            Text = ("Eq2")
            Picture = Picture["icon:/16/next"]
          }
          { Hue Button VideoFilterObj
            Name = "Hue"
            MoveScaled(1,89,16.4286,4)
            Background = &H9FFF9F&
            Tag = "       hue[=hue:saturation]\n              Software equalizer with interactive controls just like the hard-\n              ware  equalizer,  for  cards/drivers that do not support hue and\n              saturation controls in hardware.\n                 <-180-180>\n                      initial hue (default: 0.0)\n                 <-100-100>\n                      initial saturation, where negative values  result  in  a\n                      negative chroma (default: 1.0)\n"
            Text = ("Hue")
            Picture = Picture["icon:/16/next"]
          }
          { CustomVideo1 Button VideoFilterObj
            Name = "CustomVideo1"
            MoveScaled(1,94,16.4286,4)
            Background = &HFF5B5B&
            Tag = "Here you can manually type your filters and parameters.\nOmit -af or -vf and separe multiple filters with commas or use a different slot."
            Text = ("Custom 1")
            Picture = Picture["icon:/16/next"]
          }
          { CustomVideo2 Button VideoFilterObj
            Name = "CustomVideo2"
            MoveScaled(1,99,16,4)
            Background = &HFF5B5B&
            Tag = "Here you can manually type your filters and parameters.\nOmit -af or -vf and separe multiple filters with commas or use a different slot."
            Text = ("Custom 2")
            Picture = Picture["icon:/16/next"]
          }
        }
      }
    }
    { Panel1 Panel
      MoveScaled(27,1,36,50)
      ToolTip = ("Filters are processed from up to down\ntill the Audio/Video driver.")
      Expand = True
      Arrangement = Arrange.Horizontal
      Spacing = True
      Padding = 8
      Border = Border.Sunken
      { VBox2 VBox
        MoveScaled(1,5,17,40)
        Expand = True
        Spacing = True
        { VideoChainLabel Label
          MoveScaled(1,1,11,3)
          AutoResize = True
          Text = ("VideoChain")
          Alignment = Align.Left
        }
        { VideoChainBox ScrollView
          MoveScaled(2,4,13,28)
          Background = Color.TextBackground
          Expand = True
          Arrangement = Arrange.Vertical
          Spacing = True
          Margin = True
          Padding = 8
          ScrollBar = Scroll.Vertical
        }
        { VideoDriverBTN Button
          MoveScaled(2,33,13,4.5714)
          ToolTip = ("No driver Defined")
          Text = ("VideoDriver")
          Picture = Picture["icon:/16/tools"]
        }
      }
      { VBox1 VBox
        MoveScaled(19,5,17,40)
        Expand = True
        Spacing = True
        { AudioChainLabel Label
          MoveScaled(3,1,11,3)
          AutoResize = True
          Text = ("AudioChain")
          Alignment = Align.Left
        }
        { AudioChainBox ScrollView
          MoveScaled(1,4,14,28)
          Background = Color.TextBackground
          Expand = True
          Arrangement = Arrange.Vertical
          Spacing = True
          Margin = True
          Padding = 8
          ScrollBar = Scroll.Vertical
        }
        { AudioDriverBTN Button
          MoveScaled(1,33,15,4.5714)
          ToolTip = ("No driver Defined")
          Text = ("AudioDriver")
          Picture = Picture["icon:/16/tools"]
        }
      }
    }
    { SidePanel2 SidePanel
      MoveScaled(67,0,26,56)
      Arrangement = Arrange.Fill
      Orientation = Align.Right
      { VBox4 VBox
        MoveScaled(-1,1,24,49)
        ToolTip = ("Available audio filters.\nDrag them into the audio chain to use them.\nClick on a filter to bring up his configuration window.")
        { AudioFiltersLabel Label
          MoveScaled(1,2,18,3)
          AutoResize = True
          Text = ("Audio Filters Toolbox")
          Alignment = Align.Left
        }
        { AudioFiltersBox ScrollView
          MoveScaled(2,5,20,41)
          Background = Color.TextBackground
          Expand = True
          Arrangement = Arrange.Vertical
          Spacing = True
          Margin = True
          Padding = 8
          { VolNorm Button AudioFilterObj
            Name = "VolNorm"
            MoveScaled(2,1,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       volnorm[=method:target]\n              Maximizes the volume without distorting the sound.\n                 <method>\n                      Sets the used method.\n                         1: Use a single sample to smooth the  variations  via\n                         the  standard  weighted  mean  over past samples (de-\n                         fault).\n                         2: Use several samples to smooth the  variations  via\n                         the standard weighted mean over past samples.\n\n                 <target>\n                      Sets  the  target amplitude as a fraction of the maximum\n                      for the sample type (default: 0.25).\n"
            Text = ("VolNorm")
            Picture = Picture["icon:/16/next"]
          }
          { ExtraStereo Button AudioFilterObj
            Name = "ExtraStereo"
            MoveScaled(2,6,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       extrastereo[=mul]\n              (Linearly) increases the difference between left and right chan-\n              nels which adds some sort of \"live\" effect to playback.\n                 <mul>\n                      Sets  the  difference  coefficient  (default: 2.5).  0.0\n                      means mono sound (average of both  channels),  with  1.0\n                      sound  will be unchanged, with -1.0 left and right chan-\n                      nels will be swapped.\n"
            Text = ("Extra Stereo")
            Picture = Picture["icon:/16/next"]
          }
          { Delay Button AudioFilterObj
            Name = "Delay"
            MoveScaled(2,11,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       delay[=ch1:ch2:...]\n              Delays the sound to the loudspeakers such that  the  sound  from\n              the  different channels arrives at the listening position simul-\n              taneously.  It is only useful if you have more than 2 loudspeak-\n              ers.\n                 ch1,ch2,...\n                      The  delay  in ms that should be imposed on each channel\n                      (floating point number between 0 and 1000).\n\n              To calculate the required delay for the different channels do as\n              follows:\n\n              1. Measure  the  distance to the loudspeakers in meters in rela-\n                 tion to your listening position, giving you the distances  s1\n                 to  s5 (for a 5.1 system).  There is no point in compensating\n                 for the subwoofer (you will not hear the difference  anyway).\n\n              2. Subtract  the  distances  s1 to s5 from the maximum distance,\n                 i.e. s[i] = max(s) - s[i]; i = 1...5.\n\n              3. Calculate the required delays in ms as d[i] =  1000*s[i]/342;\n                 i = 1...5.\n"
            Text = ("Delay")
            Picture = Picture["icon:/16/next"]
          }
          { Karaoke Button AudioFilterObj
            Name = "Karaoke"
            MoveScaled(2,16,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       karaoke\n              Simple  voice  removal  filter exploiting the fact that voice is\n              usually recorded with mono gear and later  'center'  mixed  onto\n              the  final audio stream.  Beware that this filter will turn your\n              signal into mono.  Works well for 2 channel tracks; do not both-\n              er trying it on anything but 2 channel stereo.\n"
            Text = ("Karaoke")
            Picture = Picture["icon:/16/next"]
          }
          { Equalizer Button AudioFilterObj
            Name = "Equalizer"
            MoveScaled(2,21,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       equalizer=[g1:g2:g3:...:g10]\n              10  octave  band  graphic  equalizer, implemented using 10 IIR\n              band pass filters.  This means that  it  works  regardless  of\n              what  type of audio is being played back.  The center frequen-\n              cies for the 10 bands are:\n\n              No. frequency\n              0    31.25 Hz\n              1    62.50 Hz\n              2   125.00 Hz\n              3   250.00 Hz\n              4   500.00 Hz\n              5    1.00 kHz\n              6    2.00 kHz\n              7    4.00 kHz\n              8    8.00 kHz\n              9   16.00 kHz\n\n              If the sample rate of the sound being played is lower than the\n              center  frequency for a frequency band, then that band will be\n              disabled.  A known bug with this filter is that the character-\n              istics  for the uppermost band are not completely symmetric if\n              the sample rate is close to the center frequency of that band.\n              This  problem can be worked around by upsampling the sound us-\n              ing the resample filter before it reaches this filter.\n                 <g1>:<g2>:<g3>:...:<g10>\n                      floating point numbers representing the gain in dB for\n                      each frequency band (-12-12)\n\n              EXAMPLE:\n                 mplayer -af equalizer=11:11:10:5:0:-12:0:5:12:12 media.avi\n                      Would  amplify  the  sound in the upper and lower fre-\n                      quency region while  canceling  it  almost  completely\n                      around 1kHz.\n"
            Text = ("Equalizer ")
            Picture = Picture["icon:/16/next"]
          }
          { Volume Button AudioFilterObj
            Name = "Volume"
            MoveScaled(2,26,16.4286,4)
            Background = &HDAFFA2&
            Tag = "       volume[=v[:sc]]\n              Implements software volume control.  Use this filter with cau-\n              tion  since  it  can  reduce  the signal to noise ratio of the\n              sound.  In most cases it is best to set the level for the  PCM\n              sound  to  max,  leave  this filter out and control the output\n              level to your speakers with the master volume control  of  the\n              mixer.   In  case  your sound card has a digital PCM mixer in-\n              stead of an analog one, and you hear distortion, use the  MAS-\n              TER mixer instead.  If there is an external amplifier connect-\n              ed to the computer (this is almost always the case), the noise\n              level  can  be minimized by adjusting the master level and the\n              volume knob on the amplifier until the hissing  noise  in  the\n              background is gone.\n              This filter has a second feature: It measures the overall max-\n              imum sound level and prints out that level when MPlayer exits.\n              This  volume  estimate can be used for setting the sound level\n              in MEncoder such that the maximum dynamic range is utilized.\n              NOTE: This filter is not reentrant and can therefore  only  be\n              enabled once for every audio stream.\n                 <v>\n                      Sets  the  desired  gain in dB for all channels in the\n                      stream from -200dB to +60dB, where  -200dB  mutes  the\n                      sound  completely and +60dB equals a gain of 1000 (de-\n                      fault: 0).\n                 <sc>\n                      Turns soft clipping on (1) or off (0).   Soft-clipping\n                      can  make  the  sound  more smooth if very high volume\n                      levels are used.  Enable this option  if  the  dynamic\n                      range of the loudspeakers is very low.\n                      WARNING: This feature creates distortion and should be\n                      considered a last resort.\n\n              EXAMPLE:\n                 mplayer -af volume=10.1:0 media.avi\n                      Would amplify the sound by 10.1dB and hard-clip if the\n                      sound level is too high.\n"
            Text = ("Volume ")
            Picture = Picture["icon:/16/next"]
          }
          { scaletempo Button AudioFilterObj
            Name = "scaletempo"
            MoveScaled(2,31,16.4286,4)
            Background = &HDAFFA2&
            Tag = "          scaletempo[=option1:option2:...]\n              Scales  audio tempo without altering pitch, optionally synced to\n              playback speed (default).\n              This works by playing 'stride' ms of audio at normal speed  then\n              consuming  'stride*scale'  ms  of  input  audio.   It pieces the\n              strides together by blending 'overlap'%  of  stride  with  audio\n              following  the  previous stride.  It optionally performs a short\n              statistical analysis on the next 'search' ms of audio to  deter-\n              mine the best overlap position.\n                 scale=<amount>\n                      Nominal  amount  to  scale tempo.  Scales this amount in\n                      addition to speed.  (default: 1.0)\n                 stride=<amount>\n                      Length in milliseconds to output each stride.  Too  high\n                      of  value  will  cause  noticable  skips  at  high scale\n                      amounts and an echo at low scale amounts.  Very low val-\n                      ues  will alter pitch.  Increasing improves performance.\n                      (default: 60)\n                 overlap=<percent>\n                      Percentage of stride to  overlap.   Decreasing  improves\n                      performance.  (default: .20)\n                 search=<amount>\n                      Length  in milliseconds to search for best overlap posi-\n                      tion.  Decreasing improves performance greatly.  On slow\n                      systems,  you  will  probably want to set this very low.\n                      (default: 14)\n                 speed=<tempo|pitch|both|none>\n                      Set response to speed change.\n                         tempo\n                              Scale tempo in sync with speed (default)\n                         pitch\n                              Reverses effect of filter.  Scales pitch without\n                              altering     tempo.      Add    '[    speed_mult\n                              0.9438743126816935'    and     ']     speed_mult\n                              1.059463094352953' to your input.conf to step by\n                              musical semi-tones.  WARNING: Looses synch  with\n                              video.\n                         both Scale both tempo and pitch\n                         none Ignore speed changes\n\n              EXAMPLE:\n                 mplayer -af scaletempo -speed 1.2 media.ogg\n                      Would playback media at 1.2x normal speed, with audio at\n                      normal pitch.  Changing playback speed, would change au-\n                      dio tempo to match.\n                 mplayer  -af  scaletempo=scale=1.2:speed=none  -speed 1.2 me-\n                 dia.ogg\n                      Would playback media at 1.2x normal speed, with audio at\n                      normal pitch, but changing playback speed has no  effect\n                      on audio tempo.\n                 mplayer  -af  scaletempo=stride=30:overlap=.50:search=10  me-\n                 dia.ogg\n                      Would tweak the quality and performace parameters.\n                 mplayer -af format=floatne,scaletempo media.ogg\n                      Would  make  scaletempo use float code.  Maybe faster on\n                      some platforms.\n                 mplayer -af scaletempo=scale=1.2:speed=pitch audio.ogg\n                      Would playback audio file at 1.2x normal speed, with au-\n                      dio  at  normal  pitch.   Changing playback speed, would\n                      change pitch, leaving audio tempo at 1.2x.\n\n"
            Text = ("ScaleTempo")
            Picture = Picture["icon:/16/next"]
          }
          { CustomAudio1 Button AudioFilterObj
            Name = "CustomAudio1"
            MoveScaled(2,36,16.4286,4)
            Background = &HFF5B5B&
            Tag = "Here you can manually type your filters and parameters.\nOmit -af or -vf and separe multiple filters with commas or use a different slot."
            Text = ("Custom 1")
            Picture = Picture["icon:/16/next"]
          }
          { CustomAudio2 Button AudioFilterObj
            Name = "CustomAudio2"
            MoveScaled(2,41,16.4286,4)
            Background = &HFF5B5B&
            Tag = "Here you can manually type your filters and parameters.\nOmit -af or -vf and separe multiple filters with commas or use a different slot."
            Text = ("Custom 2")
            Picture = Picture["icon:/16/next"]
          }
        }
      }
    }
  }
  { HBox2 HBox
    MoveScaled(1,63,76,5)
    Spacing = True
    Margin = True
    Padding = 3
    { HBox3 HBox
      MoveScaled(6,0,5,4)
      Expand = True
    }
    { SaveBTN Button
      MoveScaled(29,0,13.5714,3.7143)
      ToolTip = ("Save and use new settings")
      Text = ("Save")
      Picture = Picture["icon:/16/save"]
    }
    { ApplyBTN Button
      MoveScaled(44,0,14,4)
      Tag = "Use new settings without save"
      Text = ("Use ")
      Picture = Picture["icon:/16/redo"]
    }
    { OkBTN Button
      MoveScaled(60,0,14,4)
      Tag = "Close the window"
      Text = ("Close")
      Picture = Picture["icon:/16/cancel"]
    }
  }
}
